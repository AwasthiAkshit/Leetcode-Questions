// O(logn) sol but bad:
class Solution {
    public int search(int[] arr, int target) {
        int n = arr.length;
        int lo = 0;
        int hi = n - 1;
        int pi = 0;

        if (arr[lo] < arr[hi]) {
            while (lo <= hi) {
                int mid = lo + (hi - lo) / 2;
                if (target == arr[mid]) {
                    return mid;
                } else if (target < arr[mid]) {
                    hi = mid - 1;
                } else {
                    lo = mid + 1;
                }
            }
        }

        else {
            while (lo <= hi) {
                int mid = lo + (hi - lo) / 2;
                if (mid < n - 1 && arr[mid] > arr[mid + 1]) {
                    pi = mid;
                    break;
                } else if (arr[mid] > arr[n - 1]) {
                    lo = mid + 1;
                } else {
                    hi = mid - 1;
                }
            }

            lo = 0;
            hi = pi;
            while (lo <= hi) {
                int mid = lo + (hi - lo) / 2;
                if (target == arr[mid]) {
                    return mid;
                } else if (target < arr[mid]) {
                    hi = mid - 1;
                } else {
                    lo = mid + 1;
                }
            }

            lo = pi + 1;
            hi = n - 1;
            while (lo <= hi) {
                int mid = lo + (hi - lo) / 2;
                if (target == arr[mid]) {
                    return mid;
                } else if (target < arr[mid]) {
                    hi = mid - 1;
                } else {
                    lo = mid + 1;
                }
            }

        }
        return -1;

    }
}
