/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || head.next == null) {
            return head;
        }

        int len = 1;
        ListNode tail = head;
        ListNode temp = head;
        ListNode headNew;
        while (temp.next != null) {
            len++;
            temp = temp.next;
            tail = tail.next;
        }
        int rot = k % len;
        if (rot == 0) {
            return head;
        }
        temp = head;
        for (int i = 1; i < len - rot; i++) {
            temp = temp.next;
        }
        headNew = temp.next;
        temp.next = null;
        tail.next = head;
        return headNew;

    }
}
