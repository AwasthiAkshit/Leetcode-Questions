class MyStack {
    Queue<Integer> q = new LinkedList<>();
    Queue<Integer> temp = new LinkedList<>();

    public MyStack() {
    }

    public void push(int x) {
        q.add(x);
    }

    public int pop() {

        while (q.size() > 1) {
            temp.add(q.remove());
        }
        int last = q.remove();
        while (temp.size() > 0) {
            q.add(temp.remove());
        }
        return last;
    }

    public int top() {
        while (q.size() > 1) {
            temp.add(q.remove());
        }
        int last = q.remove();
        temp.add(last);
        while (temp.size() > 0) {
            q.add(temp.remove());
        }
        return last;
    }

    public boolean empty() {
        if (q.size() == 0)
            return true;
        else
            return false;
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * boolean param_4 = obj.empty();
 */
